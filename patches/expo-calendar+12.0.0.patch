diff --git a/node_modules/expo-calendar/ios/EXCalendar/EXCalendarPermissionRequester.m b/node_modules/expo-calendar/ios/EXCalendar/EXCalendarPermissionRequester.m
index 7923a10..29485a5 100644
--- a/node_modules/expo-calendar/ios/EXCalendar/EXCalendarPermissionRequester.m
+++ b/node_modules/expo-calendar/ios/EXCalendar/EXCalendarPermissionRequester.m
@@ -32,6 +32,9 @@
     case EKAuthorizationStatusNotDetermined:
       status = EXPermissionStatusUndetermined;
       break;
+    case EKAuthorizationStatusWriteOnly:
+      status = EXPermissionStatusGranted;  
+      break;
   }
   return @{
     @"status": @(status)
@@ -42,15 +45,22 @@
 {
   EKEventStore *eventStore = [[EKEventStore alloc] init];
   EX_WEAKIFY(self)
-  [eventStore requestAccessToEntityType:EKEntityTypeEvent completion:^(BOOL granted, NSError *error) {
-    EX_STRONGIFY(self)
-    // Error code 100 is a when the user denies permission; in that case we don't want to reject.
-    if (error && error.code != 100) {
-      reject(@"E_CALENDAR_ERROR_UNKNOWN", error.localizedDescription, error);
+    
+    void (^completionBlock)(BOOL, NSError *) = ^(BOOL granted, NSError *error) {
+        EX_STRONGIFY(self)
+        // Error code 100 is a when the user denies permission; in that case we don't want to reject.
+        if (error && error.code != 100) {
+          reject(@"E_CALENDAR_ERROR_UNKNOWN", error.localizedDescription, error);
+        } else {
+          resolve([self getPermissions]);
+        }
+    };
+
+    if (@available(iOS 17, macCatalyst 17.0, *)) {
+      [eventStore requestFullAccessToEventsWithCompletion:completionBlock];
     } else {
-      resolve([self getPermissions]);
+      [eventStore requestAccessToEntityType:EKEntityTypeEvent completion:completionBlock];
     }
-  }];
 }
 
 
diff --git a/node_modules/expo-calendar/ios/EXCalendar/EXRemindersPermissionRequester.m b/node_modules/expo-calendar/ios/EXCalendar/EXRemindersPermissionRequester.m
index f77aab7..8a5ae82 100644
--- a/node_modules/expo-calendar/ios/EXCalendar/EXRemindersPermissionRequester.m
+++ b/node_modules/expo-calendar/ios/EXCalendar/EXRemindersPermissionRequester.m
@@ -32,6 +32,9 @@
     case EKAuthorizationStatusNotDetermined:
       status = EXPermissionStatusUndetermined;
       break;
+    case EKAuthorizationStatusWriteOnly:
+      status = EXPermissionStatusGranted;
+      break;
   }
   return @{
            @"status": @(status)
@@ -42,15 +45,22 @@
 {
   EKEventStore *eventStore = [[EKEventStore alloc] init];
   EX_WEAKIFY(self)
-  [eventStore requestAccessToEntityType:EKEntityTypeReminder completion:^(BOOL granted, NSError *error) {
-    EX_STRONGIFY(self)
-    // Error code 100 is a when the user denies permission; in that case we don't want to reject.
-    if (error && error.code != 100) {
-      reject(@"E_REMINDERS_ERROR_UNKNOWN", error.localizedDescription, error);
+    
+    void (^completionBlock)(BOOL, NSError *) = ^(BOOL granted, NSError *error) {
+      EX_STRONGIFY(self)
+      // Error code 100 is when the user denies permission; in that case, we don't want to reject.
+      if (error && error.code != 100) {
+        reject(@"E_REMINDERS_ERROR_UNKNOWN", error.localizedDescription, error);
+      } else {
+        resolve([self getPermissions]);
+      }
+    };
+
+    if (@available(iOS 17, macCatalyst 17.0, *)) {
+      [eventStore requestFullAccessToRemindersWithCompletion:completionBlock];
     } else {
-      resolve([self getPermissions]);
+      [eventStore requestAccessToEntityType:EKEntityTypeReminder completion:completionBlock];
     }
-  }];
 }
 
 @end
